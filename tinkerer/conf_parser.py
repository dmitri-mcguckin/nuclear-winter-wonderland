import time


class ConfParser:
    def parse(self, content: str) -> dict:
        lines = content.strip().split('\n')
        config = {}

        for line in lines:
            parts = line.split('=')
            key = parts[0]
            value = parts[1]
            if(value.isnumeric()):
                value = int(value)
            elif(value == 'true'):
                value = True
            elif(value == 'false'):
                value = False
            elif(value == ''):
                value = None
            config[key] = value
        return config

    def dumps(self, dictionary: dict) -> str:
        content = '# Server properties generated by Tinkerer on {}\n' \
                  .format(time.ctime())
        for key, value in dictionary.items():
            if (isinstance(value, bool) or value is None):
                value = {
                    True: 'true',
                    False: 'False',
                    None: ''
                }[value]
            content += '{}={}\n'.format(key, value)
        return content

    def dumps_shell(self, dicttionary: dict) -> str:
        content = '#!/usr/bin/env bash\n' \
                  + '# Resources shell generated by Tinkerer on {}\n' \
                    .format(time.ctime())
        for key, value in dicttionary.items():
            key = key.upper().replace('-', '_')
            content += 'export {}={}\n'.format(key, value)
        return content
